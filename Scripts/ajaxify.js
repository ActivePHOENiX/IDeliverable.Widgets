/*
** NOTE: This file is generated by Gulp and should not be edited directly!
** Any changes made directly to this file will be overwritten next time its asset group is processed by Gulp.
*/

/// <reference path="typings/jquery/jquery.d.ts" />
var IDeliverable;
(function (IDeliverable) {
    var AjaxWidget;
    (function (AjaxWidget) {
        $(function () {
            $(".widget-ajax-placeholder").each(function () {
                var placeholder = $(this);
                var loader = placeholder.find(".widget-ajax-loader");
                var errorLabel = placeholder.find(".widget-ajax-error");
                var ajaxUrl = placeholder.data("widget-ajax-url");
                var parent = placeholder.parent();
                if (ajaxUrl) {
                    var update = function (url, target) {
                        errorLabel.hide();
                        loader.show();
                        $.get(url, function (html) {
                            var newContent = $(html);
                            target.replaceWith(newContent);
                            // Process local urls, such as pager urls.
                            newContent.on("click", "a[href^='" + ajaxUrl + "']", function (e) {
                                update($(this).attr("href"), newContent);
                                e.preventDefault();
                            });
                        }).fail(function () {
                            errorLabel.show();
                            loader.hide();
                        });
                    };
                    update(ajaxUrl, parent);
                }
            });
        });
    })(AjaxWidget = IDeliverable.AjaxWidget || (IDeliverable.AjaxWidget = {}));
})(IDeliverable || (IDeliverable = {}));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFqYXhpZnkuanMiLCJhamF4aWZ5LnRzIl0sIm5hbWVzIjpbIklEZWxpdmVyYWJsZSIsIklEZWxpdmVyYWJsZS5BamF4V2lkZ2V0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQUNMQSxtREFBbUQ7QUFFbkQsSUFBTyxZQUFZLENBaUNsQjtBQWpDRCxXQUFPLFlBQVk7SUFBQ0EsSUFBQUEsVUFBVUEsQ0FpQzdCQTtJQWpDbUJBLFdBQUFBLFVBQVVBLEVBQUNBLENBQUNBO1FBQzVCQyxDQUFDQSxDQUFDQTtZQUVFLENBQUMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDL0IsSUFBSSxXQUFXLEdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNsQyxJQUFJLE1BQU0sR0FBVyxXQUFXLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7Z0JBQzdELElBQUksVUFBVSxHQUFXLFdBQVcsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztnQkFDaEUsSUFBSSxPQUFPLEdBQVcsV0FBVyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2dCQUMxRCxJQUFJLE1BQU0sR0FBVyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBRTFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7b0JBQ1YsSUFBSSxNQUFNLEdBQUcsVUFBVSxHQUFXLEVBQUUsTUFBYzt3QkFDOUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO3dCQUNsQixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7d0JBQ2QsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsVUFBVSxJQUFJOzRCQUNyQixJQUFJLFVBQVUsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7NEJBQ3pCLE1BQU0sQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7NEJBRS9CLDBDQUEwQzs0QkFDMUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsV0FBVyxHQUFHLE9BQU8sR0FBRyxJQUFJLEVBQUUsVUFBVSxDQUFDO2dDQUM1RCxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztnQ0FDekMsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDOzRCQUN2QixDQUFDLENBQUMsQ0FBQzt3QkFDUCxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7NEJBQ0osVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDOzRCQUNsQixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7d0JBQ2xCLENBQUMsQ0FBQyxDQUFDO29CQUNQLENBQUMsQ0FBQztvQkFFRixNQUFNLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUM1QixDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUNBLENBQUNBO0lBQ1BBLENBQUNBLEVBakNtQkQsVUFBVUEsR0FBVkEsdUJBQVVBLEtBQVZBLHVCQUFVQSxRQWlDN0JBO0FBQURBLENBQUNBLEVBakNNLFlBQVksS0FBWixZQUFZLFFBaUNsQiIsImZpbGUiOiJhamF4aWZ5LmpzIiwic291cmNlc0NvbnRlbnQiOltudWxsLCIvLy8gPHJlZmVyZW5jZSBwYXRoPVwidHlwaW5ncy9qcXVlcnkvanF1ZXJ5LmQudHNcIiAvPlxyXG5cclxubW9kdWxlIElEZWxpdmVyYWJsZS5BamF4V2lkZ2V0IHtcclxuICAgICQoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAkKFwiLndpZGdldC1hamF4LXBsYWNlaG9sZGVyXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcGxhY2Vob2xkZXI6IEpRdWVyeSA9ICQodGhpcyk7XHJcbiAgICAgICAgICAgIHZhciBsb2FkZXI6IEpRdWVyeSA9IHBsYWNlaG9sZGVyLmZpbmQoXCIud2lkZ2V0LWFqYXgtbG9hZGVyXCIpO1xyXG4gICAgICAgICAgICB2YXIgZXJyb3JMYWJlbDogSlF1ZXJ5ID0gcGxhY2Vob2xkZXIuZmluZChcIi53aWRnZXQtYWpheC1lcnJvclwiKTtcclxuICAgICAgICAgICAgdmFyIGFqYXhVcmw6IHN0cmluZyA9IHBsYWNlaG9sZGVyLmRhdGEoXCJ3aWRnZXQtYWpheC11cmxcIik7XHJcbiAgICAgICAgICAgIHZhciBwYXJlbnQ6IEpRdWVyeSA9IHBsYWNlaG9sZGVyLnBhcmVudCgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGFqYXhVcmwpIHtcclxuICAgICAgICAgICAgICAgIHZhciB1cGRhdGUgPSBmdW5jdGlvbiAodXJsOiBzdHJpbmcsIHRhcmdldDogSlF1ZXJ5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZXJyb3JMYWJlbC5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9hZGVyLnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAkLmdldCh1cmwsIGZ1bmN0aW9uIChodG1sKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZXdDb250ZW50ID0gJChodG1sKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0LnJlcGxhY2VXaXRoKG5ld0NvbnRlbnQpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUHJvY2VzcyBsb2NhbCB1cmxzLCBzdWNoIGFzIHBhZ2VyIHVybHMuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NvbnRlbnQub24oXCJjbGlja1wiLCBcImFbaHJlZl49J1wiICsgYWpheFVybCArIFwiJ11cIiwgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZSgkKHRoaXMpLmF0dHIoXCJocmVmXCIpLCBuZXdDb250ZW50KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSkuZmFpbChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JMYWJlbC5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRlci5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9O1xyXG5cclxuICAgICAgICAgICAgICAgIHVwZGF0ZShhamF4VXJsLCBwYXJlbnQpOyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
